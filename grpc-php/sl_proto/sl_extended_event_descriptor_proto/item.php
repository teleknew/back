<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: sl_mpeg_ts.proto

namespace sl_extended_event_descriptor_proto;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>sl_extended_event_descriptor_proto.item</code>
 */
class item extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string item_description_char = 1;</code>
     */
    protected $item_description_char = '';
    /**
     * Generated from protobuf field <code>string item_char = 2;</code>
     */
    protected $item_char = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $item_description_char
     *     @type string $item_char
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\SlMpegTs::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string item_description_char = 1;</code>
     * @return string
     */
    public function getItemDescriptionChar()
    {
        return $this->item_description_char;
    }

    /**
     * Generated from protobuf field <code>string item_description_char = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setItemDescriptionChar($var)
    {
        GPBUtil::checkString($var, True);
        $this->item_description_char = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string item_char = 2;</code>
     * @return string
     */
    public function getItemChar()
    {
        return $this->item_char;
    }

    /**
     * Generated from protobuf field <code>string item_char = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setItemChar($var)
    {
        GPBUtil::checkString($var, True);
        $this->item_char = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(item::class, \sl_extended_event_descriptor_proto_item::class);

