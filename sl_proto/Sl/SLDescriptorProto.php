<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: sl_mpeg_ts.proto

namespace Sl;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>sl.SLDescriptorProto</code>
 */
class SLDescriptorProto extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>uint32 descriptor_tag = 1;</code>
     */
    protected $descriptor_tag = 0;
    /**
     * Generated from protobuf field <code>uint32 descriptor_length = 2;</code>
     */
    protected $descriptor_length = 0;
    protected $data;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $descriptor_tag
     *     @type int $descriptor_length
     *     @type \Sl\SLUnknownDescriptorProto $unknown_descriptor
     *     @type \Sl\SLServiceDescriptorProto $service_descriptor
     *     @type \Sl\SLNetworkNameDescriptorProto $network_name_descriptor
     *     @type \Sl\SLStreamIdentifierDescriptorProto $stream_identifier_descriptor
     *     @type \Sl\SLTeletextDescriptorProto $teletext_descriptor
     *     @type \Sl\SLLocalTimeOffsetDescriptorProto $local_time_offset_descriptor
     *     @type \Sl\SLShortEventDescriptorProto $short_event_descriptor
     *     @type \Sl\SLExtendedEventDescriptorProto $extended_event_descriptor
     *     @type \Sl\SLParentalRatingDescriptorProto $parental_rating_descriptor
     *     @type \Sl\SLServiceListDescriptorProto $service_list_descriptor
     *     @type \Sl\SLLogicalChannelDescriptionProto $logical_channel_descriptor
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\SlMpegTs::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>uint32 descriptor_tag = 1;</code>
     * @return int
     */
    public function getDescriptorTag()
    {
        return $this->descriptor_tag;
    }

    /**
     * Generated from protobuf field <code>uint32 descriptor_tag = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setDescriptorTag($var)
    {
        GPBUtil::checkUint32($var);
        $this->descriptor_tag = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>uint32 descriptor_length = 2;</code>
     * @return int
     */
    public function getDescriptorLength()
    {
        return $this->descriptor_length;
    }

    /**
     * Generated from protobuf field <code>uint32 descriptor_length = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setDescriptorLength($var)
    {
        GPBUtil::checkUint32($var);
        $this->descriptor_length = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.sl.SLUnknownDescriptorProto unknown_descriptor = 3;</code>
     * @return \Sl\SLUnknownDescriptorProto
     */
    public function getUnknownDescriptor()
    {
        return $this->readOneof(3);
    }

    /**
     * Generated from protobuf field <code>.sl.SLUnknownDescriptorProto unknown_descriptor = 3;</code>
     * @param \Sl\SLUnknownDescriptorProto $var
     * @return $this
     */
    public function setUnknownDescriptor($var)
    {
        GPBUtil::checkMessage($var, \Sl\SLUnknownDescriptorProto::class);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.sl.SLServiceDescriptorProto service_descriptor = 4;</code>
     * @return \Sl\SLServiceDescriptorProto
     */
    public function getServiceDescriptor()
    {
        return $this->readOneof(4);
    }

    /**
     * Generated from protobuf field <code>.sl.SLServiceDescriptorProto service_descriptor = 4;</code>
     * @param \Sl\SLServiceDescriptorProto $var
     * @return $this
     */
    public function setServiceDescriptor($var)
    {
        GPBUtil::checkMessage($var, \Sl\SLServiceDescriptorProto::class);
        $this->writeOneof(4, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.sl.SLNetworkNameDescriptorProto network_name_descriptor = 5;</code>
     * @return \Sl\SLNetworkNameDescriptorProto
     */
    public function getNetworkNameDescriptor()
    {
        return $this->readOneof(5);
    }

    /**
     * Generated from protobuf field <code>.sl.SLNetworkNameDescriptorProto network_name_descriptor = 5;</code>
     * @param \Sl\SLNetworkNameDescriptorProto $var
     * @return $this
     */
    public function setNetworkNameDescriptor($var)
    {
        GPBUtil::checkMessage($var, \Sl\SLNetworkNameDescriptorProto::class);
        $this->writeOneof(5, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.sl.SLStreamIdentifierDescriptorProto stream_identifier_descriptor = 6;</code>
     * @return \Sl\SLStreamIdentifierDescriptorProto
     */
    public function getStreamIdentifierDescriptor()
    {
        return $this->readOneof(6);
    }

    /**
     * Generated from protobuf field <code>.sl.SLStreamIdentifierDescriptorProto stream_identifier_descriptor = 6;</code>
     * @param \Sl\SLStreamIdentifierDescriptorProto $var
     * @return $this
     */
    public function setStreamIdentifierDescriptor($var)
    {
        GPBUtil::checkMessage($var, \Sl\SLStreamIdentifierDescriptorProto::class);
        $this->writeOneof(6, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.sl.SLTeletextDescriptorProto teletext_descriptor = 7;</code>
     * @return \Sl\SLTeletextDescriptorProto
     */
    public function getTeletextDescriptor()
    {
        return $this->readOneof(7);
    }

    /**
     * Generated from protobuf field <code>.sl.SLTeletextDescriptorProto teletext_descriptor = 7;</code>
     * @param \Sl\SLTeletextDescriptorProto $var
     * @return $this
     */
    public function setTeletextDescriptor($var)
    {
        GPBUtil::checkMessage($var, \Sl\SLTeletextDescriptorProto::class);
        $this->writeOneof(7, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.sl.SLLocalTimeOffsetDescriptorProto local_time_offset_descriptor = 8;</code>
     * @return \Sl\SLLocalTimeOffsetDescriptorProto
     */
    public function getLocalTimeOffsetDescriptor()
    {
        return $this->readOneof(8);
    }

    /**
     * Generated from protobuf field <code>.sl.SLLocalTimeOffsetDescriptorProto local_time_offset_descriptor = 8;</code>
     * @param \Sl\SLLocalTimeOffsetDescriptorProto $var
     * @return $this
     */
    public function setLocalTimeOffsetDescriptor($var)
    {
        GPBUtil::checkMessage($var, \Sl\SLLocalTimeOffsetDescriptorProto::class);
        $this->writeOneof(8, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.sl.SLShortEventDescriptorProto short_event_descriptor = 9;</code>
     * @return \Sl\SLShortEventDescriptorProto
     */
    public function getShortEventDescriptor()
    {
        return $this->readOneof(9);
    }

    /**
     * Generated from protobuf field <code>.sl.SLShortEventDescriptorProto short_event_descriptor = 9;</code>
     * @param \Sl\SLShortEventDescriptorProto $var
     * @return $this
     */
    public function setShortEventDescriptor($var)
    {
        GPBUtil::checkMessage($var, \Sl\SLShortEventDescriptorProto::class);
        $this->writeOneof(9, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.sl.SLExtendedEventDescriptorProto extended_event_descriptor = 10;</code>
     * @return \Sl\SLExtendedEventDescriptorProto
     */
    public function getExtendedEventDescriptor()
    {
        return $this->readOneof(10);
    }

    /**
     * Generated from protobuf field <code>.sl.SLExtendedEventDescriptorProto extended_event_descriptor = 10;</code>
     * @param \Sl\SLExtendedEventDescriptorProto $var
     * @return $this
     */
    public function setExtendedEventDescriptor($var)
    {
        GPBUtil::checkMessage($var, \Sl\SLExtendedEventDescriptorProto::class);
        $this->writeOneof(10, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.sl.SLParentalRatingDescriptorProto parental_rating_descriptor = 11;</code>
     * @return \Sl\SLParentalRatingDescriptorProto
     */
    public function getParentalRatingDescriptor()
    {
        return $this->readOneof(11);
    }

    /**
     * Generated from protobuf field <code>.sl.SLParentalRatingDescriptorProto parental_rating_descriptor = 11;</code>
     * @param \Sl\SLParentalRatingDescriptorProto $var
     * @return $this
     */
    public function setParentalRatingDescriptor($var)
    {
        GPBUtil::checkMessage($var, \Sl\SLParentalRatingDescriptorProto::class);
        $this->writeOneof(11, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.sl.SLServiceListDescriptorProto service_list_descriptor = 12;</code>
     * @return \Sl\SLServiceListDescriptorProto
     */
    public function getServiceListDescriptor()
    {
        return $this->readOneof(12);
    }

    /**
     * Generated from protobuf field <code>.sl.SLServiceListDescriptorProto service_list_descriptor = 12;</code>
     * @param \Sl\SLServiceListDescriptorProto $var
     * @return $this
     */
    public function setServiceListDescriptor($var)
    {
        GPBUtil::checkMessage($var, \Sl\SLServiceListDescriptorProto::class);
        $this->writeOneof(12, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.sl.SLLogicalChannelDescriptionProto logical_channel_descriptor = 13;</code>
     * @return \Sl\SLLogicalChannelDescriptionProto
     */
    public function getLogicalChannelDescriptor()
    {
        return $this->readOneof(13);
    }

    /**
     * Generated from protobuf field <code>.sl.SLLogicalChannelDescriptionProto logical_channel_descriptor = 13;</code>
     * @param \Sl\SLLogicalChannelDescriptionProto $var
     * @return $this
     */
    public function setLogicalChannelDescriptor($var)
    {
        GPBUtil::checkMessage($var, \Sl\SLLogicalChannelDescriptionProto::class);
        $this->writeOneof(13, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getData()
    {
        return $this->whichOneof("data");
    }

}

