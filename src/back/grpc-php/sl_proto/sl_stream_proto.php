<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: sl_graph_service.proto

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>sl_stream_proto</code>
 */
class sl_stream_proto extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string guid = 1;</code>
     */
    protected $guid = '';
    /**
     * Generated from protobuf field <code>string lang = 2;</code>
     */
    protected $lang = '';
    /**
     * Generated from protobuf field <code>bool use = 3;</code>
     */
    protected $use = false;
    /**
     * Generated from protobuf field <code>.sl_stream_type_proto type = 4;</code>
     */
    protected $type = 0;
    /**
     *for es stream
     *
     * Generated from protobuf field <code>uint32 stream_id = 5;</code>
     */
    protected $stream_id = 0;
    /**
     * Generated from protobuf field <code>uint32 stream_pid = 6;</code>
     */
    protected $stream_pid = 0;
    /**
     * Generated from protobuf field <code>string format = 7;</code>
     */
    protected $format = '';
    /**
     * Generated from protobuf field <code>uint32 out_stream_pid = 8;</code>
     */
    protected $out_stream_pid = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $guid
     *     @type string $lang
     *     @type bool $use
     *     @type int $type
     *     @type int $stream_id
     *          for es stream
     *     @type int $stream_pid
     *     @type string $format
     *     @type int $out_stream_pid
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\SlGraphService::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string guid = 1;</code>
     * @return string
     */
    public function getGuid()
    {
        return $this->guid;
    }

    /**
     * Generated from protobuf field <code>string guid = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setGuid($var)
    {
        GPBUtil::checkString($var, True);
        $this->guid = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string lang = 2;</code>
     * @return string
     */
    public function getLang()
    {
        return $this->lang;
    }

    /**
     * Generated from protobuf field <code>string lang = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setLang($var)
    {
        GPBUtil::checkString($var, True);
        $this->lang = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>bool use = 3;</code>
     * @return bool
     */
    public function getUse()
    {
        return $this->use;
    }

    /**
     * Generated from protobuf field <code>bool use = 3;</code>
     * @param bool $var
     * @return $this
     */
    public function setUse($var)
    {
        GPBUtil::checkBool($var);
        $this->use = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.sl_stream_type_proto type = 4;</code>
     * @return int
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * Generated from protobuf field <code>.sl_stream_type_proto type = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setType($var)
    {
        GPBUtil::checkEnum($var, \sl_stream_type_proto::class);
        $this->type = $var;

        return $this;
    }

    /**
     *for es stream
     *
     * Generated from protobuf field <code>uint32 stream_id = 5;</code>
     * @return int
     */
    public function getStreamId()
    {
        return $this->stream_id;
    }

    /**
     *for es stream
     *
     * Generated from protobuf field <code>uint32 stream_id = 5;</code>
     * @param int $var
     * @return $this
     */
    public function setStreamId($var)
    {
        GPBUtil::checkUint32($var);
        $this->stream_id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>uint32 stream_pid = 6;</code>
     * @return int
     */
    public function getStreamPid()
    {
        return $this->stream_pid;
    }

    /**
     * Generated from protobuf field <code>uint32 stream_pid = 6;</code>
     * @param int $var
     * @return $this
     */
    public function setStreamPid($var)
    {
        GPBUtil::checkUint32($var);
        $this->stream_pid = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string format = 7;</code>
     * @return string
     */
    public function getFormat()
    {
        return $this->format;
    }

    /**
     * Generated from protobuf field <code>string format = 7;</code>
     * @param string $var
     * @return $this
     */
    public function setFormat($var)
    {
        GPBUtil::checkString($var, True);
        $this->format = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>uint32 out_stream_pid = 8;</code>
     * @return int
     */
    public function getOutStreamPid()
    {
        return $this->out_stream_pid;
    }

    /**
     * Generated from protobuf field <code>uint32 out_stream_pid = 8;</code>
     * @param int $var
     * @return $this
     */
    public function setOutStreamPid($var)
    {
        GPBUtil::checkUint32($var);
        $this->out_stream_pid = $var;

        return $this;
    }

}

